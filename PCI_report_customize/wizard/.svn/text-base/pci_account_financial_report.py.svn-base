# -*- coding: utf-8 -*-
import time
from openerp.osv import fields, osv
from openerp.tools.translate import _

class pci_accounting_report(osv.osv_memory):
    _name = "pci.accounting.report"
    _description = "PCI Accounting Report"

    def onchange_chart_id(self, cr, uid, ids, chart_account_id=False, context=None):
        res = {}
        if chart_account_id:
            company_id = self.pool.get('account.account').browse(cr, uid, chart_account_id, context=context).company_id.id
            now = time.strftime('%Y-%m-%d')
            domain = [('company_id', '=', company_id), ('date_start', '<', now), ('date_stop', '>', now)]
            fiscalyears = self.pool.get('account.fiscalyear').search(cr, uid, domain, limit=1)
            res['value'] = {'company_id': company_id, 'fiscalyear_id': fiscalyears and fiscalyears[0] or False}
        return res

    _columns = {
        'chart_account_id': fields.many2one('account.account', 'Chart of Account', required=True, domain = [('parent_id','=',False)]),
        'company_id': fields.related('chart_account_id', 'company_id', type='many2one', relation='res.company', string='Company', readonly=True),
        'fiscalyear_id': fields.many2one('account.fiscalyear', 'Fiscal Year', help='Keep empty for all open fiscal year'),
        'account_report_id': fields.many2one('account.financial.report', 'Account Reports', required=True),
        'target_move': fields.selection([('posted', 'All Posted Entries'),('all', 'All Entries'),], 'Target Moves',),
        'last_year': fields.boolean('Last Year', ),
        'two_years_go': fields.boolean('Two Years Ago', ),
        'date_from': fields.date("Start Date"),
        'date_to': fields.date("End Date"),
    }

    def _get_account(self, cr, uid, context=None):
        user = self.pool.get('res.users').browse(cr, uid, uid, context=context)
        accounts = self.pool.get('account.account').search(cr, uid, [('parent_id', '=', False), ('company_id', '=', user.company_id.id)], limit=1)
        return accounts and accounts[0] or False

    _defaults = {
            'chart_account_id': _get_account,
            'account_report_id': 4,
            'target_move': 'posted',
    }
    
    def check_report(self, cr, uid, ids, context=None):
        if context is None:
            context = {}
        print "ids=%s"% ids
        
        #print "res=%s"% res
        res = {}
        data = {}
        data['form'] = self.read(cr, uid, ids, ['chart_account_id','fiscalyear_id','account_report_id','target_move','last_year','two_years_go','date_from','date_to'], context=context)[0]
        print "data1=%s"% data
        
        for field in ['chart_account_id','fiscalyear_id','account_report_id']:
            if isinstance(data['form'][field], tuple):
                data['form'][field] = data['form'][field][0]
        
        
        result = {}
        result['fiscalyear'] = 'fiscalyear_id' in data['form'] and data['form']['fiscalyear_id'] or False
        result['journal_ids'] = 'journal_ids' in data['form'] and data['form']['journal_ids'] or False
        result['chart_account_id'] = 'chart_account_id' in data['form'] and data['form']['chart_account_id'] or False
        result['state'] = 'target_move' in data['form'] and data['form']['target_move'] or ''
        data['form']['used_context'] = result
        
        fiscalyear_obj = self.pool.get('account.fiscalyear')
        if data['form']['last_year']:
            
            fiscalyear_1 = fiscalyear_obj.browse(cr, uid, data['form']['fiscalyear_id'], context=context).name or ''
            fiscalyear_2 = str(int(fiscalyear_1)-1)
            fiscalyear_ids = fiscalyear_obj.search(cr, uid, [('name','=',fiscalyear_2),])
            cmp_context_1 = {}
            cmp_context_1['fiscalyear'] = fiscalyear_ids and fiscalyear_ids[0] or False
            cmp_context_1['journal_ids'] = 'journal_ids' in data['form'] and data['form']['journal_ids'] or False
            cmp_context_1['chart_account_id'] = 'chart_account_id' in data['form'] and data['form']['chart_account_id'] or False
            cmp_context_1['state'] = 'target_move' in data['form'] and data['form']['target_move'] or ''
            data['form']['cmp_context_1'] = cmp_context_1
        if data['form']['two_years_go']:
            
            fiscalyear_1 = fiscalyear_obj.browse(cr, uid, data['form']['fiscalyear_id'], context=context).name or ''
            fiscalyear_3 = str(int(fiscalyear_1)-2)
            fiscalyear_ids2 = fiscalyear_obj.search(cr, uid, [('name','=',fiscalyear_3),])
            cmp_context_2 = {}
            cmp_context_2['fiscalyear'] = fiscalyear_ids2 and fiscalyear_ids2[0] or False
            cmp_context_2['journal_ids'] = 'journal_ids' in data['form'] and data['form']['journal_ids'] or False
            cmp_context_2['chart_account_id'] = 'chart_account_id' in data['form'] and data['form']['chart_account_id'] or False
            cmp_context_2['state'] = 'target_move' in data['form'] and data['form']['target_move'] or ''
            data['form']['cmp_context_2'] = cmp_context_2
        
        #print "ssssssssss data=%s"% data
        #raise osv.except_osv(_('Error!'),_("不再进行下去！！！！"))
        
        #datas['model'] = active_model
        #datas['ids'] = active_ids
        
        return {
            'type':'ir.actions.report.xml',
            'datas':data,
            'report_name':'pl_pastyear_yr_report',
        }


pci_accounting_report()

# vim:expandtab:smartindent:tabstop=4:softtabstop=4:shiftwidth=4:
